{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","erro","Error","obterNegociacoesDaSemanaAnterior","url","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch","console","log"],"mappings":";;;;;;AAASA,uB,oBAAAA,W;;AACAC,sB,eAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;AAC3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;AACDK,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAJL,EAMCC,QAAQ;AACJ,8BAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH,qBARF,CAAP;AASH;AACDC,iDAAiCC,GAAjC,EAAsC;AAClC,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAJL,EAMCC,QAAQ;AACJ,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBARF,CAAP;AAUH;AACDG,oDAAoC;AAChC,2BAAO,KAAKf,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SACIA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAJL,EAMCC,QAAQ;AACJ,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBARF,CAAP;AAUH;AACDI,4CAA4B;AACxB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKjB,wBAAL,EADe,EAEf,KAAKY,gCAAL,EAFe,EAGf,KAAKE,iCAAL,EAHe,CAAZ,EAKFZ,IALE,CAKGgB,WACFA,QACKC,MADL,CACY,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CADjC,EACyD,EADzD,EAEKE,IAFL,CAEU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAElB,IAAF,CAAOmB,OAAP,KAAmBF,EAAEjB,IAAF,CAAOmB,OAAP,EAFvC,CAND,EAUFC,KAVE,CAUIjB,QAAQ;AACXkB,gCAAQC,GAAR,CAAYnB,IAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBAbE,CAAP;AAcH;AAtD0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService'\r\nimport { Negociacao } from './Negociacao'\r\n\r\nexport class NegociacaoService {\r\n    constructor() {\r\n        this._http = new HttpService()\r\n    }\r\n    obterNegociacoesDaSemana() {\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(\r\n                dados =>\r\n                    dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                ,\r\n                erro => {\r\n                    throw new Error('Não foi possível obter as negociações')\r\n                })\r\n    }\r\n    obterNegociacoesDaSemanaAnterior(url) {\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(\r\n                dados =>\r\n                    dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                ,\r\n                erro => {\r\n                    throw new Error('Não ffoi possível obter as negociações dasemana anterior.')\r\n                }\r\n            )\r\n    }\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(\r\n                dados =>\r\n                    dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                ,\r\n                erro => {\r\n                    throw new Error('Não foi possível obter as negociações da semana retrasada')\r\n                }\r\n            )\r\n    }\r\n    obterNegociacoesDoPeriodo() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ])\r\n            .then(periodo =>\r\n                periodo\r\n                    .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                    .sort((a, b) => b.data.getTime() - a.data.getTime())\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações do período')\r\n            })\r\n    }\r\n}"]}